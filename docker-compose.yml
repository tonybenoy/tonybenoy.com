networks:
  app-network:
    driver: bridge

volumes:
  nginx-conf:
    driver: local
  certbot-conf:
    driver: local
  certbot-www:
    driver: local
  app-logs:
    driver: local
  nginx-logs:
    driver: local

services:
  nginx:
    image: nginx:1.25-alpine
    container_name: tonybenoy-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "${HTTPS_PORT:-443}:443"
    volumes:
      - ./nginx/${NGINX_CONFIG:-app-dev.conf}:/etc/nginx/conf.d/default.conf:ro
      - certbot-conf:/etc/letsencrypt:ro
      - certbot-www:/var/www/certbot:ro
      - nginx-logs:/var/log/nginx
    networks:
      - app-network
    depends_on:
      - fastapi
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        compress: "true"
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 128M
        reservations:
          cpus: '0.1'
          memory: 64M

  fastapi:
    build:
      context: .
      dockerfile: docker/Dockerfile
      target: production
    image: tonybenoy-com:latest
    container_name: tonybenoy-app
    restart: unless-stopped
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - GITHUB_USERNAME=${GITHUB_USERNAME:-tonybenoy}
      - GITHUB_TOKEN=${GITHUB_TOKEN:-}
      - CORS_ORIGINS=${CORS_ORIGINS:-["*"]}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-["*"]}
      - APP_ENV=${APP_ENV:-local}
    volumes:
      - app-logs:/app/logs
      - ${CODE_MOUNT:-/tmp/empty}:/app/app
    networks:
      - app-network
    depends_on: []
    healthcheck:
      test: ["CMD", "python", "-c", "import httpx; httpx.get('http://localhost:8000/test', timeout=10)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"
        compress: "true"
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M

  certbot:
    image: certbot/certbot:latest
    container_name: tonybenoy-certbot
    restart: unless-stopped
    volumes:
      - certbot-conf:/etc/letsencrypt
      - certbot-www:/var/www/certbot
    networks:
      - app-network
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"
        compress: "true"
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 128M
        reservations:
          cpus: '0.05'
          memory: 64M
