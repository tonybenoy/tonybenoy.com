name: CI

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - name: Set up Python
        run: uv python install 3.11

      - name: Install dependencies
        run: uv sync

      - name: Run Ruff linter
        run: uv run ruff check .

      - name: Run Ruff formatter
        run: uv run ruff format --check .

      - name: Type check with mypy
        run: uv run mypy . --ignore-missing-imports

      - name: Run tests with coverage
        run: uv run pytest --cov=app --cov-report=term-missing --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

      - name: Check security with bandit
        run: uv run bandit -r app/

      - name: Test application startup
        run: |
          uv run python -c "from app.main import app; print('âœ… Application imports successfully')"

  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: |
          docker build -f docker/Dockerfile -t tonybenoy-com:test .

      - name: Test Docker image
        run: |
          # Start the container in the background
          docker run -d -p 8000:8000 --name test-container tonybenoy-com:test
          
          # Wait for the application to start
          timeout 30s bash -c 'until curl -f http://localhost:8000/health; do sleep 1; done'
          
          # Test health endpoint
          curl -f http://localhost:8000/health | grep -q "healthy"
          
          # Test main page
          curl -f http://localhost:8000/ -o /dev/null
          
          # Cleanup
          docker stop test-container
          docker rm test-container

      - name: Clean up Docker image
        run: docker rmi tonybenoy-com:test
